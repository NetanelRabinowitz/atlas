package atlas

import cats.implicits._

trait NativeBoilerplate {
  self: Value.type =>

  [#def native[[#A1#], R](func: ([#A1#]) => R)(implicit [#dec1: ValueDecoder[A1]#], enc: ValueEncoder[R]): Native =
    Native { values =>
      for {
        [#arg1 <- Interpreter.pureEither(dec1(values(0)))#
        ]
        ans <- try Interpreter.pure(enc(func([#arg1#]))) catch {
                 case exn: Exception =>
                   Interpreter.fail("Error in native function", Some(exn))
               }
      } yield ans
    }#

  ]

  [#def nativeM[[#A1#], R](func: ([#A1#]) => Interpreter.Step[R])(implicit [#dec1: ValueDecoder[A1]#], enc: ValueEncoder[R]): Native =
    Native { values =>
      for {
        [#arg1 <- Interpreter.pureEither(dec1(values(0)))#
        ]
        ans <- func([#arg1#])
      } yield enc(ans)
    }#

  ]
}
