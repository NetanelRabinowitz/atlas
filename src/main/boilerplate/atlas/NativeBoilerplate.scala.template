package atlas

import cats.implicits._

trait NativeBoilerplate {
  self: Value.type =>

  [#def native[[#A1#], R](func: ([#A1#]) => R)(implicit [#dec1: ValueDecoder[A1]#], enc: ValueEncoder[R]): Native =
    Native { values =>
      try {
        for {
          [#arg1 <- dec1(values(0))#
          ]
        } yield enc(func([#arg1#]))
      } catch {
        case exn: Exception =>
          Left(Interpreter.Error("Error in native function", Some(exn)))
      }
    }#

  ]

  [#def nativeM[[#A1#], R](func: ([#A1#]) => Either[Interpreter.Error, R])(implicit [#dec1: ValueDecoder[A1]#], enc: ValueEncoder[R]): Native =
    Native { values =>
      for {
        [#arg1 <- dec1(values(0))#
        ]
        ans <- func([#arg1#])
      } yield enc(ans)
    }#

  ]
}
