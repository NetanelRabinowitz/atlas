package atlas

import cats.implicits._

trait NativeBoilerplate {
  self: Value.type =>

  [#def native[[#A1#], R](func: ([#A1#]) => R)(
    implicit
    [#argDec1: ValueDecoder[A1]#,
    ],
    resEnc: ValueEncoder[R]
  ): Native =
    Native { values =>
      for {
        [#arg1 <- Interpreter.pureEither(argDec1(values(0)))#
        ]
        ans <- Interpreter.tryCatch(resEnc(func([#arg1#])))
      } yield ans
    }#

  ]

  [#def nativeM[[#A1#], R](func: ([#A1#]) => Interpreter.Step[R])(
    implicit
    [#argDec1: ValueDecoder[A1]#,
    ],
    resEnc: ValueEncoder[R]
  ): Native =
    Native { values =>
      for {
        [#arg1 <- Interpreter.pureEither(argDec1(values(0)))#
        ]
        ans <- func([#arg1#])
      } yield resEnc(ans)
    }#

    ]
}
